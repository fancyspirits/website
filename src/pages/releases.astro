---
import { getCollection } from 'astro:content';
import Card from '../components/Card.astro';
import SocialBar from '../components/SocialBar.astro';
import Layout from '../layouts/BaseLayout.astro';
import type { CollectionEntry } from 'astro:content';

const releases = (await getCollection("releases", ({ data }) => !data.draft))
					.map(({ data }) => data)
                    .sort((a, b) => a.releaseDate < b.releaseDate ? 1 : -1);

function formatReleaseDate(release: CollectionEntry<"releases">["data"]) {
    const date = new Date(release.releaseDate);
    return date.toLocaleDateString();
}

const getArtistsOfRelease = async (release) => {
    const releaseArtists = release.artists.split(",").map(artist => artist.trim());
    const artists = (await getCollection("artists", ({ data }) => !data.draft && releaseArtists.includes(data.name)))
                        .map(artist => artist.data);

    return artists;
}

const artistsOfReleases = Object.fromEntries(await Promise.all(releases.map(async release => [release.id, await getArtistsOfRelease(release)])));

---
<style>
    main {
        width: 80%;
        max-width: 1200px;
    }

    .wrapper {
        display: flex;
        justify-content: center;
    }


    .card-wrapper {
        display: grid;
        grid-template-columns: 1fr 3fr max-content;
        grid-template-rows: fit-content 1fr 1fr fit-content;
    }

    .release-image {
        grid-row: 2 / 3;
        grid-column: 1 / 2;
        display: flex;
        align-items: stretch;
        justify-content: center;
        padding: 0.5em;
        transition: 1s;
        position: relative;
        aspect-ratio: 1;
    }
    
    .release-image img {
        width: 100%;
        border-radius: 1em;
        box-shadow: 5px 5px 7px rgba(70,70,70,0.15),
            -1px -1px 4px rgba(200,200,200,0.6);
        transition: 1s;
        cursor: pointer;
    }

    .release-image img.release-image-clicked {
        transform: scale(150%, 150%);
        box-shadow: 10px 10px 15px rgba(70,70,70,0.15),
            -2px -2px 8px rgba(200,200,200,0.6);
    }

    .release-info {
        grid-row: 3 / 4;
        grid-column: 1 / 2;
        justify-self: stretch;
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        justify-content: center;
        margin-left: 1em;
        margin-top: 1em;
        margin-right: 0.5em;
    }

    .release-artists {
        font-weight: 700;
    }

    .release-name {
        grid-row: 1 / 2;
        grid-column: 1 / 4;
        font-size: 2em;
        font-weight: 400;
        text-align: center;
        margin-bottom: 1em;
    }
    
    .release-info .release-genre {
        font-size: 0.9em;
        font-weight: 400;
        font-style: italic;
        margin-top: 0.25em;
    }

    .artists {
        grid-column: 3 / 4;
        grid-row: 2 / 4;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: stretch;
        margin-top: 1em;
        margin-right: 1em;
    }

    .artists a {
        display: block;
    }

    .artists .artist-img {
        display: block;
        width: 2.5em;
        aspect-ratio: 1;
        margin: 0.5em;
        border-radius: 50%;
        border: solid 0.75px #dddddd;
        box-shadow: 0.05em 0.05em 0.15em rgba(0, 0, 0, 0.25);
        transition: 0.5s;
    }

    .artists .artist-link {
        transition: 0.5s;
    }
    
    .artists .artist-link:hover {
        transform: translateY(-0.33em);
    }
    
    .artists .artist-link:hover .artist-img {
        box-shadow: 0.1em 0.125em 0.15em rgba(0, 0, 0, 0.3);
    }

    .release-date {
        grid-row: 1 / 2;
        grid-column: 3 / 4;
        justify-self: flex-end;
        align-self: flex-start;
        font-size: 0.8em;
        color: #777;
        font-weight: 300;
        font-style: italic;
        text-align: end;
        transition: 1s;
    }

    .release-video {
        grid-row: 2 / 4;
        grid-column: 2 / 3;
        display: grid;
    }

    .release-video iframe {
        height: 100%;
        aspect-ratio: 16 / 9;
        justify-self: center;
        align-self: center;
        border: none;
        border-radius: 1.5em;
    }

    .release-links {
        grid-row: 4 / 5;
        grid-column: 1 / 4;
        margin-top: 2em;
    }

    .release-tracks {
        grid-row: 5 / 6;
        grid-column: 1 / 4;
        margin-top: 1.5em;
    }

    .release-tracks hr {
        margin-bottom: 1em;
    }

    .release-tracks h3 {
        font-size: 1.25em;
    }

    .release-track {
        margin-top: 1em;
        margin-bottom: 1em;
        display: grid;
        grid-template-columns: min-content max-content 1fr;
    }

    .release-track-index {
        grid-row: 1 / 2;
        grid-column: 1 / 2;
        margin-right: 1em;
        justify-self: flex-start;
        align-self: center;
        width: min-content;
    }

    .release-track-info {
        grid-row: 1 / 2;
        grid-column: 2 / 3;
        align-self: stretch;
        justify-self: flex-start;
        display: flex;
        flex-direction: column;
        justify-content: space-evenly;
    }

    .release-track-info .release-track-name {
        font-weight: 600;
    }

    .release-track-info  .release-track-feat {
        font-weight: 300;
        font-style: italic;
        font-size: 0.9em;
    }

    .release-track-links {
        grid-row: 1 / 2;
        grid-column: 3 / 4;
        align-self: center;
        justify-self: flex-end;
        margin-left: 2em;
    }

    .card {
        margin-bottom: 2em;
        position: relative;
    }

    .anchor {
        position: absolute;
        top: -25em;
    }

    .card-animation {
        animation: card-enters 1s 1;
    }

    @keyframes card-enters {
        0% {
            opacity: 0;
            filter: blur(0.25em);
            transform: translateY(20em);
        }

        100% {
            opacity: 1;
            filter: blur(0);
            transform: translateY(0);
        }
    }

    .mobile-separator {
        display: none;
    }

    @media screen and (max-width: 800px) {
        main {
            width: 95%;
        }

        .release-date {
            grid-row: 1 / 2;
            grid-column: 1 / 4;
            text-align: center;
            justify-self: unset;
            align-self: unset;
            margin-bottom: 2em;
        }

        .release-name {
            grid-row: 2 / 3;
            grid-column: 2 / 4;
            text-align: left;
            margin-left: 0.75em;
            margin-bottom: 0;
            align-self: flex-end;
            font-size: 1.25em;
            font-weight: 600;
        }

        .hide-on-mobile {
            display: none;
        }

        .release-video {
            grid-row: 5 / 6;
            grid-column: 1 / 4;
            margin-top: 1em;
        }

        .release-image {
            grid-row: 2 / 4;
            grid-column: 1 / 2;
            padding: 0;
            align-self: center;
        }

        .release-info {
            grid-row: 3 / 4;
            grid-column: 2 / 4;
            margin-top: 0;
            justify-content: flex-start;
        }

        .release-artists {
            font-weight: 500;
        }

        .artists {
            grid-row: 4 / 5;
            grid-column: 2 / 4;
            flex-direction: row;
            justify-content: start;
            margin-top: 0;
        }

        .release-links {
            grid-row: 6 / 7;
            grid-column: 1 / 4;
        }

        .release-tracks {
            grid-row: 7 / 8;
        }

        .release-track {
            grid-template-columns: 1fr min-content max-content 1fr 1fr;
        }

        .release-track-index {
            grid-row: 2 / 3;
            grid-column: 1 / 2;
            justify-self: start;
            font-size: 1.5em;
            font-weight: 300;
        }
        
        .release-track-info {
            grid-column: 1 / 6;
            width: 100%;
            justify-self: center;
        }

        .release-track-info > span, .release-track-info > p {
            text-align: center;
        }

        .release-track .release-track-links {
            grid-row: 2 / 3;
            grid-column: 2 / 5;
            justify-self: center;
            margin-top: 1em;
            margin-bottom: 1em;
            margin-left: 0;
            transform: translateX(-0.5em);
        }

        .mobile-separator {
            grid-row: 6 / 7;
            grid-column: 2 / 5;
            align-self: center;
            text-align: center;
            color: #777777;
            border-top: 0.5px solid black;
            min-height: 0.25em;
            display: block;
            width: 33%;
            justify-self: center;
        }
    }

    @media (prefers-reduced-motion: reduce), (max-width: 800px) {
        .release-image img.release-image-clicked {
            transform: scale(100%, 100%);
            box-shadow: 5px 5px 7px rgba(70,70,70,0.15),
                -1px -1px 4px rgba(200,200,200,0.6);
        }

        .card-animation {
            animation: none;
        }

        .anchor {
            position: absolute;
            top: -5em;
        }

        .release-info .artists .artist-link:hover {
            transform: translateY(0);
        }
        
        .release-info .artists .artist-link:hover .artist-img {
            box-shadow: 0.05em 0.05em 0.15em rgba(0, 0, 0, 0.25);
        }

    }

    @media (prefers-color-scheme: dark) {
        .release-image img {
            box-shadow: 5px 5px 7px rgba(30,30,30,0.95),
                -1px -1px 4px rgba(50,50,50,0.6);
        }

        .release-image img.release-image-clicked {
            box-shadow: 10px 10px 15px rgba(30,30,30,0.95),
                -2px -2px 8px rgba(50,50,50,0.6);
        }

        .release-info .artists .artist-img {
            border: solid 0.75px #222222;
            box-shadow: 0.05em 0.05em 0.15em rgba(0, 0, 0, 0.25);
        }
        .release-info .artists .artist-link:hover .artist-img {
            box-shadow: 0.1em 0.125em 0.15em rgba(50, 50, 50, 0.3);
        }
    }
</style>
<Layout title="Fancy Spirits: Releases" route="releases">
    <div class="wrapper">
        <main>
            <h1><br></h1>
            {releases.map(release => 
            <Card class="card">
                <span class="anchor" id={`${release.id}-release`}></span>
                <div class="card-wrapper">
                    <div class="release-image">
                        <img src={release.imageSrc} alt={release.name}>
                    </div>
                    <div class="release-name">{release.name}</div>
                    <div class="release-info">
                        <p class="release-artists">{release.artists}</p>
                        <p class="release-genre">{release.genre}</p>
                        
                    </div>
                    <div class="release-video">
                        <iframe data-astro-prefetch="false" loading="lazy" src={release.embedYt} title={`${release.name} – Youtube`} allow="autoplay; clipboard-write; encrypted-media; picture-in-picture; web-share" allowfullscreen></iframe>
                        <!--<p>{release.description}</p>-->
                    </div>
                    <div class="artists">
                        {artistsOfReleases[release.id].map((artist) => <a class="artist-link" href={`/artists#${artist.id}-artist`}><img class="artist-img" src={artist.imageSrc} style={artist.backgroundColor && `background-color: ${artist.backgroundColor}`}/></a>)}
                    </div>
                    <div class="release-date">
                        <span>Released on<br class="hide-on-mobile">&nbsp;{formatReleaseDate(release)}</span>
                    </div>
                    <div class="release-links">
                        <SocialBar links={release.links} before={`Stream ${release.tracks ? "Album" : "now"}`}></SocialBar>
                    </div>
                    {release.tracks && <div class="release-tracks">
                        <hr />
                        <h3>Tracks</h3>
                        {release.tracks.map((track, index) => <div class="release-track">
                            <p class="release-track-index">{index + 1}.</p>
                            <div class="release-track-info">
                                <p class="release-track-name">{track.name}</p>
                                {track.feat && <span class="release-track-feat">feat. {track.feat}</span>}
                            </div>
                            <div class="release-track-links">
                                <SocialBar 
                                    links={track.links} 
                                    marginRight={false} 
                                    marginLeft={true}
                                    marginAmount="1em"
                                ></SocialBar>
                            </div>
                            <div class="mobile-separator">&nbsp;</div>
                        </div>)}
                    </div>}
                </div>    
            </Card>)}
        </main>
    </div>
</Layout>
<script>
    const observer = new IntersectionObserver(entries => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add("card-animation");
                return;
            }
        })
    });

    document.querySelectorAll<HTMLElement>(".card").forEach(card => {
        const image = card.querySelector<HTMLElement>(".release-image img")!;
        image.addEventListener(
            "click", e => {
                image.classList.toggle("release-image-clicked");
                e.stopPropagation();
            },
        );
        card.addEventListener("click", () => image.classList.remove("release-image-clicked"));
    });

    document.querySelectorAll(".card").forEach(card => observer.observe(card));
</script>